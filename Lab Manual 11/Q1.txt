[org 0x0100]

jmp start
nameStr: db 'Enter your name: '
rollStr: db 'Enter your roll number: '
courseStr: db 'Enter your course name: '
sectionStr: db 'Enter your section: '
nam: times 20 db 0
nameSize: dw 0
roll: times 20 db 0
rollSize: dw 0
course: times 20 db 0
courseSize: dw 0
sec: times 20 db 0
secSize: dw 0

;------------------------------------------------------------------------------
clrScreen:
push bp
mov bp, sp
push ax
push di
push es

mov ax, 0xB800 ;display memory block starting physical address
mov es, ax
mov di, 0
mov ax, 0x0720 ;background is black, foreground is space char so empty slot
nextChar:
mov word[es:di], ax
add di, 2
cmp di, 4000
jne nextChar

pop es
pop di
pop ax
pop bp
ret
;------------------------------------------------------------------------------
printStr:
push bp
mov bp, sp
push es
push ax
push bx
push cx
push dx
push di

mov ah, 0x13 ;service
mov al, 1 ;update cursor position
mov bh, 0 ;page
mov bl, [bp+10] ;attribute
mov cx, [bp+8] ;length
mov dh, [bp+14] ;row
mov dl, [bp+12] ;col
mov es, [bp+6]

push bp
mov di, [bp+4]
mov bp, di
int 0x10
pop bp

pop di
pop dx
pop cx
pop bx
pop ax
pop es
pop bp
ret 12
;------------------------------------------------------------------------------
getInput:
push bp
mov bp, sp
push es
push ax
push bx
push cx
push dx
push di
push si

mov di, [bp+6] ;string offset
mov cx, 0
n1:
mov ah, 0x00
int 0x16 ;get keystroke
cmp al, '0' ;ascii
je en
mov [di], al
inc di
inc cx
mov dl, al
mov ah, 0x02 ;print char at cursor position
int 0x21
jmp n1

en:
mov si, word[bp+4] 
mov [si], cx ;stores size of the string

pop si
pop di
pop dx
pop cx
pop bx
pop ax
pop es
pop bp
ret 4
;------------------------------------------------------------------------------
start:
call clrScreen

push 5
push 5
push 0x07
push 17
push cs
push nameStr
call printStr ;using dos services
push nam
push nameSize
call getInput

push 7
push 5
push 0x07
push 24
push cs
push rollStr
call printStr
push roll
push rollSize
call getInput

push 9
push 5
push 0x07
push 24
push cs
push courseStr
call printStr
push course
push courseSize
call getInput

push 11
push 5
push 0x07
push 20
push cs
push sectionStr
call printStr
push sec
push secSize
call getInput

;printing in the middle of the screen
call clrScreen

push 10
push 25
push 0x07
push nameSize
push cs
push nam
call printStr

push 11
push 25
push 0x07
push rollSize
push cs
push roll
call printStr

push 12
push 25
push 0x07
push courseSize
push cs
push course
call printStr

push 12
push 25
push 0x07
push secSize
push cs
push sec
call printStr

mov ax, 0x4c00
int 0x21