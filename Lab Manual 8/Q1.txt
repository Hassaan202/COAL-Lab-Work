[org 0x0100]
jmp start
stor: times 4000 dw 0

;-------------------------------
calculatePosition:
push bp
mov bp, sp
push ax
push bx
push cx
push dx
push di
push si

mov ax, 80
mul word[bp+6]
add ax, [bp+4]
shl ax, 1
mov word[bp+8], ax  ;return value

pop si
pop di
pop dx
pop cx
pop bx
pop ax
pop bp
ret 4

;-------------------------------
clrScreen:
push bp
mov bp, sp
push ax
push cx
push si
push di
push es

mov ax, 0xb800
mov es, ax
mov di, 0
mov ax, 0x0720 ;space on black background
mov cx, 2000

cld ;auto-increment mode
rep stosw

pop es
pop di
pop si
pop cx
pop ax
pop bp
ret

;-------------------------------
copyLines:
push bp
mov bp, sp
push ax
push bx
push cx
push dx
push si
push di
push es
push ds

mov ax, 0xb800
mov es, ax
mov ds, ax

mov si, 0
mov ax, 80
mul word[bp+4]
mov dx, ax
shl ax, 1
mov di, 4000
sub di, ax
mov cx, 2000
sub cx, dx

cld
rep movsw

pop ds
pop es
pop di
pop si
pop dx
pop cx
pop bx
pop ax
pop bp
ret 2
;-------------------------------
scrollUp:
push bp
mov bp, sp
push ax
push bx
push cx
push dx
push si
push di
push es
push ds

mov ax, 0xb800
mov ds, ax
mov es, ax
mov ax, 80
mul word[bp+4] ;numRows
mov dx, ax
shl ax, 1
mov si, ax
mov di, 0
mov cx, 2000
sub cx, dx
cld ;auto-increment mode
rep movsw

;clears the last 5 lines
mov cx, dx
mov ax, 0x0720
rep stosw

pop ds
pop es
pop di
pop si
pop dx
pop cx
pop bx
pop ax
pop bp
ret 2

;-------------------------------
start:

push 5
call scrollUp

mov ax, 0x4c00
int 0x21